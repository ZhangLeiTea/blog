1、在shell编程中如果没有特殊说明，所有输入的均作为字符串解释
    -- 看下面一组命令
      -- a=1
      -- b=2
      -- echo $($a + $b)
          -- $() 是命令替换运算符，取出$a的值1把他当做一个命令， + 和$b的值2 都是这个命令的参数
      -- echo $(($a + $b))
          -- $[] $(())  它们是一样的，都是进行数学运算的。支持+ - * / %：分别为 “加、减、乘、除、取模”。但是注意，bash只能作整数运算，对于浮点数是当作字符串处理的。
          
          
2、[ ] :
  -- 即为test命令的另一种形式。
  -- 但要注意许多：
    1.你必须在左括号的右侧和右括号的左侧各加一个空格，否则会报错。
    2.test命令使用标准的数学比较符号来表示字符串的比较，而用文本符号来表示数值的比较。很多人会记反了。使用反了，shell可能得不到正确的结果。
    3.大于符号或小于符号必须要转义，否则会被理解成重定向。
   
  -- (( ))及[[ ]] :
    它们分别是[ ]的针对数学比较表达式和字符串表达式的加强版。
    其中(( ))，不需要再将表达式里面的大小于符号转义，除了可以使用标准的数学运算符外，还增加了以下符号：
    
    
3、shell数据类型
  1）仅有两种数据类型 【数值】和 【字符串】
  2）shell中所有的输入，不论是有引号还是没有引号，都是作为字符串处理的，复制给一个变量后，你可以通过不同的运算符将这个变量用作不同的解析。例如$(())是进行算数运算的， `expr $a -lt $b`中-lt也是算数运算符，那么expr这个命令就会将$a当做数值来运算，一点$a不是数值就会报错
  
4、参数和字符串
  -- echo $aa $bb
    -- 这样会将$aa $bb当做echo的参数，
    -- 参数是以空格为分隔符的
  -- echo "$aa $bb"
    -- 这个字符串的作用就是将上面的一拖作为一个参数传给命令echo
    
