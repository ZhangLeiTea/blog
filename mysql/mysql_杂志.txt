1、
	命令行选项 > 选项文件 > 环境变量
	环境变量指的是系统的环境变量，mysql会读取这些环境变量的值
	具体的环境变量见4.9
	
2、mysql选项和变量【系统变量】（这里的系统指的是mysql而不是操作系统）
	- 选项集  和   系统变量集
	-mysql变量分为全局变量和会话变量。当开启一次会话时，先读取全局变量作为会话变量的默认值
	-并不是所有的选项都对应了一个mysql变量
	-短选项带值
		-可以是2中形式：-hlocalhost 或 【-h localhost】
	-长选项带值
		-形式：【--host=localhost】
	-dash和underscore可以交换使用，二者是等价的
		--skip-grant-tables and --skip_grant_tables are equivalent
	-但是mysql的变量名只有一个，系统变量总是用下划线
	
	-mysql有一些选项仅能在启动阶段指定，有一个系统变量集合，有些能在启动时指定，有些可以在运行是改变
	-在选项文件里，可以对系统变量赋值。此时的系统变量的语法，dash和underscore是可交换使用的。
		也就是说可以在选项文件中指定系统变量
	
变量
	- 用户变量
		-用户变量与数据库连接有关，在这个连接中声明的变量，在连接断开的时候，就会消失。
		- 名字必须以@开头。set @a = 1;
	- 系统变量
		- 原则
			- 无论是在设置系统变量还是查询系统变量值的时候，只要没有指定到底是全局变量还是会话变量，都当做会话变量来处理。
		- 全局变量
			- 全局变量在MYSQL启动的时候由服务器自动将它们初始化为默认值，这些默认值可以通过更改my.ini这个文件来更改
			
		- 会话变量
			- 会话变量在每次建立一个新的连接的时候，由MYSQL来初始化。MYSQL会将当前所有全局变量的值复制一份。来做为会话变量
			- show session variables;
			- 如果想要更改会话变量的值，利用语句：
				- set session varname = value;
				- set @@session.varname = value;
				- set varname = value;
		- 只读变量和动态变量
	
	
3、处理优先级
	-后处理的会覆盖前面的
	-mysqld-auto.cnf > 命令行 > 选项文件 > 环境变量
	-处理优先级，正好和加载顺序相反
	
	
4、--disable	--skip		--enbale	--loose		4.2.2.4


5、【linux权限配置】
	- /etc/mysql下的配置文件要求是 root权限
	- mysqld是以mysql账户启动的
	- data/下的数据库文件是mysql账户权限
	- mysql账户没有登入shell


6、聚集索引和非聚集索引
	- 字典序
		- 按拼音有序排序
	- 拼音检索就是聚集索引，因为存储的记录（数据库中是行数据、字典中是汉字的详情记录）是按照该索引排序的；数据是按照索引排序的
	- 笔画索引，虽然笔画相同的字在笔画索引中相邻，但是实际存储页码却不相邻
	- 非聚集索引索引项顺序存储，但索引项对应的内容却是随机存储的；
	- 正文内容按照一个特定维度排序存储，这个特定的维度就是聚集索引；
	- 聚集索引一般是表中的主键索引，如果表中没有显示指定主键，则会选择表中的第一个不允许为NULL的唯一索引，如果还是没有的话，就采用Innodb存储引擎为每行数据内置的6字节ROWID作为聚集索引。
	- 每张表只有一个聚集索引，因为聚集索引在精确查找和范围查找方面良好的性能表现（相比于普通索引和全表扫描），聚集索引就显得弥足珍贵，聚集索引选择还是要慎重的（一般不会让没有语义的自增id充当聚集索引）。
	- 该表中主键id是该表的聚集索引、name为非聚集索引；表中的每行数据都是按照聚集索引id排序存储的；比如要查找name='Arla'和name='Arle'的两个同学，他们在name索引表中位置可能是相邻的，但是实际存储位置可能差的很远。name索引表节点按照name排序，检索的是每一行数据的主键。聚集索引表按照主键id排序，检索的是每一行数据的真实内容。
	- 从宏观上分析下聚集索引和普通索引的性能差异，还是针对上述student表：
（1）select * from student where id >5000 and id <20000;
（2）select * from student where name > 'Alie' and name < 'John';
第一条SQL语句根据id进行范围查询，因为(5000, 20000)范围内的记录在磁盘上按顺序存储，顺序读取磁盘很快就能读到这批数据。
第二条SQL语句查询（'Alie', 'John'）范围内的记录，主键id分布可能是离散的1，100，20001，5000.....；增加了随机读取数据页几率；所以普通索引的范围查询效率被聚集索引甩开几条街都不止；非聚集索引的精确查询效率还是可以的，比聚集索引查询只增加了一次IO开销。
	