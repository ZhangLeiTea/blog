1、主要阐述
  1）python的subprocess模块Popen类的使用，及进程stdin/stdout/stderr的解释
  2）linux-pipe的理解及pipe作为Popen:stdout的使用
  3）Linux通过pipe作进程间通信，并将pipe一端的输出作为socket的输入用于socket传输数据
  4）tcp-socket传输数据的一种方式：附带标志，例如 【数据开始传输标志，数据大小，数据传输完成标志】，这些对标志的限定就像是在制定应用层协议
  
2、示例约束
  1）hostA（192.168.1.2）需要hostB（192.168.1.3）上的MySQL的备份文件，即hostA向hostB发起备份请求，hostB将备份文件传输给hostA
  2）hostA和hostB通过socket通信，hostB上运行守护进程serviced用于接收来自hostA的命令
  3）hostB通过pipe和mysqldump通信，实时获取MySQLdump的输出，将该输出传输给hostA
  
3、问题分析
  1）hostB作为mysqld的运行服务器，其本身磁盘空间可能相对比较紧张，如果先用mysqldump将数据库备份到sql文件中，sql文件可能会占用很多磁盘空间，而且这个sql文件在传输到hostA之后就要删除了，没有必要在hostB上先生成文件
  --解决：
    (1) hostB上有2个进程，serviced和mysqldump，那么问题就变成了2个进程如何通信的问题，参照《unp-进程间通信》有这么几种方式：文件系统、网络、管道、named pipe、消息队列等，文件系统：可以在serviced中开启子进程mysqldump并将mysqldump输出到一个sql文件（文件系统）中，等待子进程mysqldump完成后，serviced在读取sql文件内容并通过socket传输给hostA；管道：子进程mysqldump作为管道的输入端，serviced作为管道的输出（读取）端并将读取的数据直接通过socket传输给hostA
